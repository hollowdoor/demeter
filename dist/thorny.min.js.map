{"version":3,"file":"thorny.min.js","sources":["../src/lib/assertions.js","../src/lib/get_test_args.js","../src/lib/timeout.js","../src/runner.js","../src/run_controls.js","../src/print_controls.js","../node_modules/p-defer/index.js","../node_modules/delay/index.js","../src/lib/write_version.js","../src/index.js"],"sourcesContent":["function getError(message){\n    if(typeof Error !== 'undefined'){\n        return Error(message);\n    }else{\n        return message; //For really old browsers.\n    }\n}\n\nfunction createAssertError(message, info = {}, passed=true){\n    message = message ? '\\n' + message : '';\n\n    let assertData = Object.keys(info).reduce((data, prop)=>{\n        return data + '  ' + prop + ': ' + info[prop] + '\\n';\n    }, '');\n\n\n    message += '\\n  ---\\n' + assertData + '  ...\\n';\n\n\n    let e = new Error(message);\n    //console.log('PASSED ', passed);console.log(info);\n\n    e.passed = !!passed;\n    e.failed = !passed;\n    //console.log('e ', e)\n    return e;\n}\n\nexport default class Assertions {\n    assert(val, message, extra = {}){\n\n        if(!val){\n            let err = createAssertError(message, {\n                operator: 'assert',\n                expected: true,\n                actual: val\n            }, false);\n\n            throw err;\n        }\n    }\n    fail(message){\n        let err = createAssertError(message, {\n            operator: 'fail',\n        }, false);\n        throw err;\n    }\n    equal(value1, value2, message=''){\n        if(value1 !== value2){\n            let err = createAssertError(message, {\n                operator: 'equal',\n                expected: value1,\n                actual: value2\n            }, false);\n\n            throw err;\n        }\n    }\n    reject(message=''){\n        let err = createAssertError(message, {\n            operator: 'reject'\n        }, false);\n        return Promise.reject(err);\n    }\n}\n","export default function getTestArgs(description, options, callback){\n    if(typeof callback === 'undefined'){\n        if(typeof options === 'undefined'){\n            callback = description;\n            options = {};\n            description = '';\n        }else{\n            callback = options;\n        }\n    }\n    return [description, options, callback];\n}\n","import delay from 'delay';\nexport default function timeout(n){\n    return delay(n);\n}\n","export function run(pattern, options, args){\n\n    if(typeof options === 'undefined'){\n        options = {};\n        args = [];\n    }else if(typeof args === 'undefined'){\n        if(Object.prototype.toString.call(options) === '[object Array]'){\n            args = options;\n            options = {};\n        }else{\n            args = [];\n        }\n    }\n\n    options.env = Object.assign(options.env || {}, {\n        TEST_ENVIRONMENT: true\n    });\n\n    try{\n\n        const glob = require('glob-promise');\n        const path = require('path');\n        const cwd = process.cwd();\n        //console.log('cwd ',cwd)\n        //console.log('options ',options)\n        return glob(pattern, options).then(files=>{\n            //console.log('files ',files)\n            return Promise.all(\n                files.map(file=>{\n                    return spawn(\n                        [file].concat(args),\n                        //[path.join(cwd, file)].concat(args),\n                        options\n                    );\n                })\n            );\n        });\n\n    }catch(e){\n        return Promise.reject(e);\n    }\n}\n\nfunction spawn(args=[], options = {}){\n    try{\n        const tapMerge = require('tap-merge');\n        const multistream = require('multistream');\n        const spawnCP = require('child_process').spawn;\n\n        const out = tapMerge();\n        //out.pipe(process.stdout);\n\n        options.stdio = [null, 'pipe', null];\n\n        return new Promise((resolve, reject)=>{\n            let cp = spawnCP('node', args, options);\n            cp.on('exit', resolve);\n            cp.on('error', reject);\n            //multistream([cp.stdout, cp.stderr]).pipe(out).pipe(process.stdout);\n            cp.stdout.pipe(out).pipe(process.stdout);\n            //cp.stderr.pipe(out).pipe(process.stderr);\n        });\n    }catch(e){\n        return Promise.reject(e);\n    }\n}\n","import Assertions from './lib/assertions.js';\n\nexport default class RunControls {\n    constructor({\n        description = '',\n        count = 0,\n        read = null,\n        rethrow = false\n    } = {}){\n\n        let pending = Promise.resolve();\n        let rethrown = false;\n\n        Object.defineProperties(this, {\n            rethrow: {value: rethrow}\n        });\n\n        this.getResult = function(value, passed){\n\n            return {\n                description,\n                passed: !!passed,\n                failed: !passed,\n                value\n            };\n        };\n\n\n        this.write = function(result){\n            if(rethrown){ return this; }\n            if(rethrow){\n                rethrown = true;\n                pending = pending.then(v=>result).then(v=>{\n                    if(v.value && v.value instanceof Error){\n                        //let str = '\\n\\n  # rethrown test \\n'+v.value.message.split('\\n').join('\\n  ')+'\\n';\n                        //let err = new Error(str);\n                        return Promise.reject(\n                            new Error(\n                                '\\n\\n  # rethrown test \\n'+v.value.message.split('\\n').join('\\n  ')+'\\n'\n                            )\n                        );\n                    }\n                    return v;\n                });\n                return this;\n            }\n\n            pending = pending.then(v=>result).then(result=>{\n                return read(result);\n            });\n\n            return this;\n        };\n\n\n        this.end = function(){\n            return pending;\n        };\n    }\n    pass(value){\n        return this.getResult(value, true);\n    }\n    fail(value){\n        return this.getResult(value, false);\n    }\n    asserts(){\n        return new Assertions();\n    }\n    resolve(callback){\n        try{\n            return Promise.resolve(callback(this.asserts()))\n            .then(v=>this.pass(v))\n            .catch(e=>this.fail(e));\n        }catch(e){\n            return this.fail(e);\n        }\n    }\n    reverse(callback){\n        try{\n            return Promise.resolve(callback(this.asserts()))\n            .then(v=>this.fail(v))\n            .catch(e=>this.pass(e));\n        }catch(e){\n            return this.pass(e);\n        }\n    }\n}\n","export default class PrintControls {\n    constructor({\n        description,\n        result = {},\n        count = 0\n    } = {}){\n        Object.defineProperty(this, '_result', {\n            value: result\n        });\n        Object.defineProperty(this, 'count', {\n            value: count,\n            enumerable: true\n        });\n\n        this.tap = function(){\n            let t = this.result();\n\n            if(/^#/.test(t.description)){\n                const createDirective = (failed, result) =>{\n                    result.failed = failed;\n                    result.passed = !failed;\n                    result.value = new Error('');\n                    return result;\n                };\n                if(/^#[ ]TODO/.test(t.description)){\n                    t = createDirective(true, t);\n                }else if(/^#[ ]PASS/.test(t.description)){\n                    t = createDirective(false, t);\n                }\n            }\n\n            let message = t.description.length ? t.description : '';\n            let str = '';\n\n            if(t.passed){\n                str = 'ok ' + count + ' - ' + message;\n            }else if(t.failed){\n                let errMessage = t.value ? t.value.message : '';\n                str = 'not ok ' + count + ' - ' + message + ' ' + errMessage;\n            }\n            return str;\n        };\n    }\n    result(){\n        return this._result;\n    }\n}\n","'use strict';\nmodule.exports = () => {\n\tconst ret = {};\n\n\tret.promise = new Promise((resolve, reject) => {\n\t\tret.resolve = resolve;\n\t\tret.reject = reject;\n\t});\n\n\treturn ret;\n};\n","'use strict';\nconst defer = require('p-defer');\n\nclass CancelError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'CancelError';\n\t}\n}\n\nconst generate = willResolve => function (ms, value) {\n\tms = ms || 0;\n\tconst useValue = (arguments.length > 1);\n\tlet result = value;\n\n\tconst delaying = defer();\n\tconst promise = delaying.promise;\n\n\tlet timeout = setTimeout(() => {\n\t\tconst settle = willResolve ? delaying.resolve : delaying.reject;\n\t\tsettle(result);\n\t}, ms);\n\n\tconst thunk = thunkResult => {\n\t\tif (!useValue) {\n\t\t\tresult = thunkResult;\n\t\t}\n\t\treturn promise;\n\t};\n\n\tthunk.then = promise.then.bind(promise);\n\tthunk.catch = promise.catch.bind(promise);\n\tthunk._actualPromise = promise;\n\n\tthunk.cancel = () => {\n\t\tif (timeout) {\n\t\t\tclearTimeout(timeout);\n\t\t\ttimeout = null;\n\t\t\tdelaying.reject(new CancelError('Delay canceled'));\n\t\t}\n\t};\n\n\treturn thunk;\n};\n\nmodule.exports = generate(true);\nmodule.exports.reject = generate(false);\nmodule.exports.CancelError = CancelError;\n","const writeVersion = (()=>{\n    let g;\n    let TAP_VERSION_WRITTEN = false;\n    if(typeof global === 'undefined'){\n        g = window;\n    }else{\n        g = global;\n    }\n\n    if(typeof g['TAP_VERSION_WRITTEN'] === 'undefined'){\n        Object.defineProperty(g, 'TAP_VERSION_WRITTEN', {\n            get(){\n                return TAP_VERSION_WRITTEN;\n            }\n        });\n    }\n\n    return ()=>{\n        if(g.TAP_VERSION_WRITTEN) return;\n        console.log('TAP version 13');\n        TAP_VERSION_WRITTEN = true;\n    };\n})();\n\nexport default writeVersion;\n","import RunControls from './run_controls.js';\nimport PrintControls from './print_controls.js';\nimport getTestArgs from './lib/get_test_args.js';\nimport timeout from './lib/timeout.js';\nimport writeVersion from './lib/write_version.js';\n\nexport * from './runner.js';\n\nexport class ThornyTest {\n    constructor({\n        description = '',\n        run = null,\n        print = null,\n        time = null,\n        count = 0,\n        rethrow = false\n    } = {}){\n        writeVersion();\n        let pending = timeout(1);\n        this['@@testinstance'] = true;\n        time = time || Date.now();\n\n        Object.defineProperties(this, {\n            count: {get(){ return count; }},\n            startTime: {value: time},\n            rethrow: {value: rethrow}\n        });\n\n        let running;\n\n        if(run){\n\n            running = new RunControls({\n                description,\n                rethrow,\n                read(result){\n                    return print(new PrintControls({result, count}));\n                }\n            });\n\n            //pending = pending.then(v=>run(running));\n\n        }\n\n        let included = [];\n\n        Object.defineProperty(this, 'include', {\n            value: function(...plans){\n                included = included.concat(plans);\n            }\n        });\n\n        Object.defineProperty(this, 'done', {\n            value: function(callback, keepTesting){\n\n                if(included.length){\n                    pending = included.reduce((p, plan)=>{\n                        return p.then(v=>plan.done());\n                    }, Promise.resolve());\n                }\n\n                if(run){\n                    pending = pending.then(v=>run(running));\n                    return pending\n                    .then(v=>{\n                        if(!keepTesting && !rethrow){\n                            console.log('1..' + count);\n                            console.log('# duration ' + (Date.now()-time) + 'ms');\n                        }\n                        try{\n                            if(callback){\n                                return callback(v);\n                            }\n                            return pending.then(a=>v);\n                        }catch(e){\n                            return Promise.reject(e);\n                        }\n\n                    });\n                }\n\n                if(callback){\n                    return Promise.resolve().then(callback);\n                }\n\n                return Promise.resolve();\n            }\n        });\n    }\n    test(description, options, callback){\n        let self = this;\n\n        [description, options, callback] = getTestArgs(description, options, callback);\n\n        return new (this.constructor)({\n            description,\n            time: this.startTime,\n            count: this.count + 1,\n            rethrow: options.rethrow,\n            print(complete){\n                let output = complete.tap();\n                console.log(output);\n            },\n            run(controls){\n                return self.done(()=>{\n                    let result = controls.resolve(callback);\n                    return controls.write(result).end();\n                }, true);\n            }\n        });\n    }\n    reverse(description, options, callback){\n        let self = this;\n\n        [description, options, callback] = getTestArgs(description, options, callback);\n\n        return new (this.constructor)({\n            description,\n            time: this.startTime,\n            count: this.count + 1,\n            rethrow: options.rethrow,\n            print(complete){\n                let output = complete.tap();\n                console.log(output);\n            },\n            run(controls){\n                return self.done(()=>{\n                    let result = controls.reverse(callback);\n                    return controls.write(result).end();\n                }, true);\n            }\n        });\n    }\n}\n\nexport function thorny(options = {}){\n    return new ThornyTest(options);\n}\n"],"names":["createAssertError","message","info","passed","Object","keys","reduce","data","prop","let","e","Error","failed","getTestArgs","description","options","callback","delay","n","spawn","args","const","tapMerge","require","spawnCP","out","stdio","Promise","resolve","reject","cp","on","stdout","pipe","process","Assertions","assert","val","extra","operator","expected","actual","fail","equal","value1","value2","err","RunControls","ref","pending","rethrown","defineProperties","this","rethrow","value","getResult","write","result","then","v","split","join","read","end","pass","asserts","catch","reverse","PrintControls","defineProperty","count","enumerable","tap","t","test","createDirective","length","str","errMessage","_result","ret","promise","CancelError","super","name","generate","willResolve","ms","useValue","arguments","delaying","defer","timeout","setTimeout","thunk","thunkResult","bind","_actualPromise","cancel","clearTimeout","writeVersion","g","TAP_VERSION_WRITTEN","global","window","get","console","log","ThornyTest","time","Date","now","startTime","running","run","print","included","concat","plans","keepTesting","p","plan","done","a","self","complete","output","controls","pattern","prototype","toString","call","env","assign","TEST_ENVIRONMENT","glob","cwd","files","all","map","file"],"mappings":"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"}