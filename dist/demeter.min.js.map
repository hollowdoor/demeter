{"version":3,"file":"demeter.min.js","sources":["../src/lib/assertions.js","../node_modules/deep-equal/lib/keys.js","../node_modules/deep-equal/lib/is_arguments.js","../node_modules/deep-equal/index.js","../src/lib/messages.js","../src/lib/run_controls.js","../src/lib/write_version.js","../node_modules/indent-string/index.js","../src/lib/print_controls.js","../src/lib/test.js","../src/lib/fast_reducable_queue.js","../src/index.js"],"sourcesContent":["import deepEqual from 'deep-equal';\nimport * as m from './messages.js';\n\nfunction createAssertError(info = {}, passed=true){\n    let assertData = Object.keys(info).reduce((data, prop)=>{\n        return data + '  ' + prop + ': ' + info[prop] + '\\n';\n    }, '');\n\n    let message = '\\n\\n  ---\\n' + assertData + '  ...\\n';\n\n    let e = new Error(message);\n\n    e.passed = !!passed;\n    e.failed = !passed;\n\n    return e;\n}\n\nfunction isEqual(a, b, strict=true){\n    if(strict){\n        return a === b;\n    }\n    return a == b;\n}\n\nexport default class Assertions {\n    constructor(running){\n        this.running = running;\n    }\n    ok(val, message){\n\n        if(!val){\n            let err = createAssertError({\n                message: m.showFalse(message, val),\n                operator: 'ok',\n                expected: true,\n                actual: val\n            }, false);\n\n            throw err;\n        }\n    }\n    assert(val, message){\n\n        if(!val){\n            let err = createAssertError({\n                message: m.showFalse(message, val),\n                operator: 'assert',\n                expected: true,\n                actual: val\n            }, false);\n\n            throw err;\n        }\n    }\n    not(val, message){\n        if(!!val){\n            let err = createAssertError({\n                message: m.showTrue(message, val),\n                operator: 'not',\n                expected: false,\n                actual: val\n            }, false);\n\n            throw err;\n        }\n    }\n    fail(message){\n        let err = createAssertError({\n            operator: 'fail',\n        }, false);\n        throw err;\n    }\n    equal(value1, value2, message, strict){\n        if(!isEqual(value1, value2, strict)){\n        //if(value1 !== value2){\n            let err = createAssertError({\n                message: m.showNotEqual(message, value1, value2),\n                operator: 'equal',\n                expected: m.showEqual(null, value1, value2),\n                actual: m.showNotEqual(null, value1, value2)\n            }, false);\n\n            throw err;\n        }\n    }\n    notEqual(value1, value2, message, strict){\n        if(isEqual(value1, value2, strict)){\n        //if(value1 === value2){\n            let err = createAssertError(message, {\n                message: m.showEqual(message, value1, value2),\n                operator: 'notEqual',\n                expected: m.showNotEqual(null, value1, value2),\n                actual: m.showEqual(null, value1, value2)\n            }, false);\n\n            throw err;\n        }\n    }\n    reject(message=''){\n        let err = createAssertError({\n            message: message,\n            operator: 'reject',\n            expected: 'reject to not be called',\n            actual: 'reject was called'\n        }, false);\n        return Promise.reject(err);\n    }\n    deepEqual(object1, object2, message, strict = true){\n        if(!deepEqual(object1, object2, {strict})){\n            let err = createAssertError({\n                message: m.showNotEqual(message, object1, object2),\n                operator: 'deepEqual',\n                expected: m.showEqual(null, object1, object2),\n                actual: m.showNotEqual(null, object1, object2)\n            }, false);\n\n            throw err;\n        }\n    }\n}\n","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n","const str = a => (\n    typeof a === 'object'\n    ? JSON.stringify(a, null, 2)\n    : a\n);\n\nconst m = fn => (message, ...values) => (\n    message\n    ? message\n    : fn(...values.map(v=>str(v)))\n);\n\nconst bool = (v, s) => typeof v === 'boolean' ? v : v + s;\n\nconst showEqual = m((a, b) => a + ' equal to ' + b);\nconst showNotEqual = m((a, b) => a + ' not equal to ' + b);\nconst showTrue = m(a => bool(a, ' is truthy'));\nconst showFalse = m(a => bool(a, ' is falsy'));\n//const showTrue = m(a => a + ' is truthy');\n//const showFalse = m(a => a + ' is falsy');\n\nexport {\n    showEqual, showNotEqual, showTrue, showFalse\n};\n","import Assertions from './assertions.js';\n\nexport default class RunControls {\n    constructor({\n        description = '',\n        count = 0,\n        plan = 1,\n        time\n    } = {}){\n\n        Object.defineProperties(this, {\n            count: {value: count}\n        });\n\n        this.getResult = function(value, passed){\n\n            return {\n                description,\n                passed: !!passed,\n                failed: !passed,\n                value,\n                count,\n                plan\n            };\n        };\n    }\n    pass(value){\n        return this.getResult(value, true);\n    }\n    fail(value){\n        return this.getResult(value, false);\n    }\n    asserts(){\n        return new Assertions(this);\n    }\n    resolve(callback, reverse = false){\n        try{\n            let value = callback(this.asserts());\n\n            /*if(typeof value === 'object'){\n                let run = value['resolve'];\n                if(typeof run === 'function'){\n                    return value\n                    .resolve()\n                    .then(sub=>{\n                        //console.log('sub ',sub)\n                        if(sub.failed){\n                            let result = this.fail();\n                            result.subTest = sub;\n                            return result;\n                        }\n                        return this.pass();\n                    });\n                }\n            }*/\n\n            if(reverse){\n                return Promise.resolve(value)\n                .then(v=>this.fail(v))\n                .catch(e=>this.pass(e));\n            }\n\n            return Promise.resolve(value)\n            .then(v=>this.pass(v))\n            .catch(e=>this.fail(e));\n        }catch(e){\n            if(reverse){ return Promise.resolve(this.pass(e)); }\n            return Promise.resolve(this.fail(e));\n        }\n    }\n    reverse(callback){\n        return this.resolve(callback, true);\n    }\n}\n","const writeVersion = (()=>{\n    let g;\n    let TAP_VERSION_WRITTEN = false;\n    if(typeof global === 'undefined'){\n        g = window;\n    }else{\n        g = global;\n    }\n\n    if(typeof g['TAP_VERSION_WRITTEN'] === 'undefined'){\n        Object.defineProperty(g, 'TAP_VERSION_WRITTEN', {\n            get(){\n                return TAP_VERSION_WRITTEN;\n            }\n        });\n    }\n\n    return ()=>{\n        if(g.TAP_VERSION_WRITTEN) return;\n        console.log('TAP version 13');\n        TAP_VERSION_WRITTEN = true;\n    };\n})();\n\nexport default writeVersion;\n","'use strict';\nmodule.exports = (str, count, opts) => {\n\t// Support older versions: use the third parameter as options.indent\n\t// TODO: Remove the workaround in the next major version\n\tconst options = typeof opts === 'object' ? Object.assign({indent: ' '}, opts) : {indent: opts || ' '};\n\tcount = count === undefined ? 1 : count;\n\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError(`Expected \\`input\\` to be a \\`string\\`, got \\`${typeof str}\\``);\n\t}\n\n\tif (typeof count !== 'number') {\n\t\tthrow new TypeError(`Expected \\`count\\` to be a \\`number\\`, got \\`${typeof count}\\``);\n\t}\n\n\tif (typeof options.indent !== 'string') {\n\t\tthrow new TypeError(`Expected \\`options.indent\\` to be a \\`string\\`, got \\`${typeof options.indent}\\``);\n\t}\n\n\tif (count === 0) {\n\t\treturn str;\n\t}\n\n\tconst regex = options.includeEmptyLines ? /^/mg : /^(?!\\s*$)/mg;\n\treturn str.replace(regex, options.indent.repeat(count));\n}\n;\n","import writeVersion from './write_version.js';\nimport indent from 'indent-string';\n\nexport default class PrintControls {\n    constructor({\n        description = '',\n        passed = true,\n        failed = true,\n        value = '',\n        count,\n        plan = 1,\n        subTest = null\n    } = {}){\n\n        Object.defineProperties(this, {\n            description: {value: description},\n            passed: {value: passed},\n            failed: {value: failed},\n            value: {value},\n            count: {value:count}\n        });\n\n        this.tap = function(){\n\n            if(count === 1){\n                console.log('TAP version 13');\n                console.log('1..'+plan);\n            }\n\n            /*if(/^#/.test(description)){\n                const createDirective = (failed, result) =>{\n                    result.failed = failed;\n                    result.passed = !failed;\n                    result.value = new Error('');\n                    return result;\n                };\n                if(/^#[ ]TODO/.test(t.description)){\n                    t = createDirective(true, t);\n                }else if(/^#[ ]PASS/.test(t.description)){\n                    t = createDirective(false, t);\n                }\n            }*/\n\n\n\n            let message = description.length ? description : '';\n            let str = '';\n            if(passed){\n                str = 'ok ' + count + ' - ' + message;\n                /*if(value && value.message){\n                    if(/#[ ]rethrow[ ]test/.test(value.message)){\n                        str += indent(value.message, 2);\n                    }\n                }*/\n            }else if(failed){\n                //console.log('subTest ',subTest)\n                if(subTest){\n                    let errMessage = '\\n\\n  ' + subTest.description + '\\n';\n                    errMessage += subTest.value.message\n                    return 'not ok ' + count + ' - ' + message + ' ' +  indent(errMessage);\n                }\n                let errMessage = value ? value.message : '';\n                str = 'not ok ' + count + ' - ' + message + ' ' + errMessage;\n            }\n\n            if(count === plan){\n                setTimeout(()=>{\n                    console.log('# done');\n                });                \n            }\n            return str;\n        };\n    }\n}\n","import RunControls from './run_controls.js';\nimport PrintControls from './print_controls.js';\n\nexport default class Test {\n    constructor({\n        description = '',\n        run = null,\n        print = null,\n        time = null,\n        plan = 1\n    } = {}){\n\n        Object.defineProperties(this, {\n            description: {value: description},\n            time: {value: time || Date.now()}\n        });\n\n        Object.defineProperty(this, 'run', {\n            value: function({\n                count = 1,\n                plan\n            } = {}){\n\n                let running = new RunControls({\n                    description,\n                    count,\n                    plan\n                });\n\n                return Promise.resolve(run(running))\n                .then(result=>{\n                    return print(new PrintControls(result));\n                });\n            }\n        });\n    }\n}\n","export default class FastReducableQueue {\n    constructor(){\n        this.length = 0;\n    }\n    take(...queues){\n        for(let j=0; j<queues.length; j++){\n            for(let i=0; i<queues[j].length; i++){\n                this.push(queues[j][i]);\n            }\n            queues[j].clear();\n        }\n    }\n    push(...values){\n        if(this.length === 0){\n            for(let i=0; i<50; i++){ this[i] = {}; }\n        }\n\n        for(let i=0; i<values.length; i++){\n            this[this.length] = values[i];\n            ++this.length;\n        }\n    }\n    shift(){\n        let v = this[0], i = 0;\n        --this.length;\n        while(i < this.length){\n            this[i] = this[i+1];\n        }\n\n        return v;\n    }\n    reduce(fn, startValue){\n        let i = 0;\n        let result = startValue;\n        //console.log('this.length ', this.length)\n        while(i < this.length){\n            result = fn(result, this[i], i, this);\n            ++i;\n        }\n        return result;\n    }\n    clear(){\n        let i = 0;\n        while(i < this.length){\n            try{\n                delete this[i];\n            }catch(e){}\n        }\n        this.length = 0;\n    }\n}\n","import getTestArgs from './lib/get_test_args.js';\nimport Test from './lib/test.js';\nimport FastReducableQueue from './lib/fast_reducable_queue.js';\n\nexport class Demeter {\n    constructor(){\n        let queue = this.queue = new FastReducableQueue();\n        this.count = 0;\n        Object.defineProperty(this, 'plan', {\n            get(){\n                return queue.length;\n            }\n        });\n    }\n    run(){\n\n        let time = Date.now();\n\n        let pending = this.queue.reduce((p, t)=>{\n            return p.then(v=>{\n                return t.run({\n                    count: ++this.count,\n                    plan: this.plan\n                });\n            });\n        }, Promise.resolve());\n\n        return pending.then(v=>{\n            console.log('# duration ' + (Date.now() - time) + 'ms');\n        });\n    }\n    take(...holders){\n\n        for(let j=0; j<holders.length; j++){\n            let queue = holders[j].queue;\n            let i = 0;\n            while(i < queue.length){\n                this.queue.push(queue[i]);\n                ++i;\n            }\n            holders[j].queue = null;\n        }\n\n        return this;\n    }\n    test(description, callback){\n\n        //[description, options, callback] = getTestArgs(description, options, callback);\n\n        let test = new Test({\n            description,\n            time: this.startTime,\n            print(complete){\n                let output = complete.tap();\n                console.log(output);\n            },\n            run(controls){\n                return controls.resolve(callback);\n            }\n        });\n\n        this.queue.push(test);\n        return this;\n    }\n    reverse(description, callback){\n\n        //[description, options, callback] = getTestArgs(description, options, callback);\n\n        let test = new Test({\n            description,\n            time: this.startTime,\n            print(complete){\n                let output = complete.tap();\n                console.log(output);\n            },\n            run(controls){\n                return controls.reverse(callback);\n            }\n        });\n\n        this.queue.push(test);\n        return this;\n    }\n}\n\nexport function test(options = {}){\n    return new Demeter(options);\n}\n"],"names":["createAssertError","info","passed","let","message","Object","keys","reduce","data","prop","e","Error","failed","isEqual","a","b","strict","shim","obj","key","push","module","supported","object","prototype","toString","call","unsupported","length","hasOwnProperty","propertyIsEnumerable","supportsArgumentsClass","arguments","exports","isUndefinedOrNull","value","undefined","isBuffer","x","copy","slice","objEquiv","opts","i","isArguments","pSlice","deepEqual","ka","objectKeys","kb","sort","Array","actual","expected","Date","getTime","str","JSON","stringify","m","fn","values","map","v","bool","s","showEqual","showNotEqual","showTrue","showFalse","Assertions","running","this","ok","val","m.showFalse","operator","assert","not","m.showTrue","fail","equal","value1","value2","m.showNotEqual","m.showEqual","notEqual","reject","err","Promise","object1","object2","RunControls","ref","defineProperties","count","getResult","description","plan","pass","asserts","resolve","callback","reverse","then","catch","g","TAP_VERSION_WRITTEN","global","window","defineProperty","get","const","options","assign","indent","TypeError","regex","includeEmptyLines","replace","repeat","PrintControls","tap","console","log","subTest","errMessage","setTimeout","Test","time","now","run","result","print","FastReducableQueue","take","j","queues","this$1","clear","shift","startValue","Demeter","queue","p","t","holders","test","startTime","complete","output","controls"],"mappings":"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"}